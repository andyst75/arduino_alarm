#include <Arduino.h> 
/**
 * Буфферизированная работа с джойстиком и клавишами
 * Если с момента последнего запроса состояния прошло менее 20 миллисекунд - возвращаем последние считанные данные
 * Считываем значения джойстика и усредняем с предыдущим значением
 * Если с момента последнего запроса состояния прошло более 40 миллисекунд и состояние клавиши такое же, то считаем клавишу нажатой
 */

#ifndef Joystick_H
#define Joystick_H
 // true  == 0x1
 // false == 0x0
class Joystick{
  public:
    // конструктор класса, сохраняем параметры во внутренние переменные
    Joystick(uint8_t menuPin, uint8_t joyPin, uint8_t joyUDPin, uint8_t joyLRPin);

    void begin();           // инициализируем джойстик и кнопку
    void Update();          // основная функция, считываем показания джойстика, считаем тайминги и т.д.
    boolean isMenuButton(); // кнопка "Меню" нажата или отжата
    boolean isMenuClick();  // фиксирует нажатие клавиши "Меню", после считывания нажатого значения состояние сбрасывается
    boolean isJoyButton();  // кнопка джойстика нажата или отжата
    boolean isJoyClick();   // фиксирует нажатие клавиши джойстика, после считывания нажатого значения состояние сбрасывается
    int8_t getLR();         // положение джойстика Лево - Право, -127 .. 127
    int8_t getUD();         // положение джойстика Верх - Низ, -127 .. 127

  private:
    // При инициализации запоминаем номера разъемов
    uint8_t menuPin;
    uint8_t joyPin;
    uint8_t joyUDPin;
    uint8_t joyLRPin;

    // Внутренние переменные 
    unsigned long lastUpdate;   // Момент последнего обновления данных
    unsigned long btUpdate;     // Момент последней проверки нажатия клавиши
    int16_t valueLR;
    int16_t valueUD;

    

    uint8_t prevMenuButton;     // Предыдущее значение нажатия кнопки
    uint8_t valueMenuButton;    // Зафиксированное значение нажатия кнопки
    uint8_t prevJoyButton;      // Предыдущее значение нажатия кнопки
    uint8_t valueJoyButton;     // Зафиксированное значение нажатия кнопки

    enum buttonStatus {         // варианты нажатия клавиши
      btState1 = 0,             // нажата, состояние не считали
      btState2,                 // нажата, состояние считали
      btState3                  // не нажата
    };

    uint8_t isJoyReadStatus;    // состояние клавиши
    uint8_t isMenuReadStatus;
};

#endif // Joystick_H
